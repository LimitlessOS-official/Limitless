# LimitlessOS Production Kernel Makefile
# Builds a clean, production-grade hybrid kernel

PROJECT_NAME = LimitlessOS-Production
VERSION = 2.0.0

BUILD_DIR = build/production
DIST_DIR = dist/production
ISO_DIR = $(BUILD_DIR)/iso
KERNEL_ISO_DIR = $(ISO_DIR)/boot/kernel
GRUB_ISO_DIR = $(ISO_DIR)/boot/grub

KERNEL_BINARY = $(BUILD_DIR)/limitless_production.elf
ISO_IMAGE = $(DIST_DIR)/LimitlessOS-Production-v$(VERSION).iso

# Compiler flags for production
CFLAGS = -m32 -ffreestanding -nostdlib -O2 -Wall -Wextra \
         -fno-stack-protector -fno-pic -fno-pie \
         -mno-red-zone -mno-mmx -mno-sse -mno-sse2

LDFLAGS = -m elf_i386 -nostdlib

# Assembly flags
ASFLAGS = --32

# Source files
ASM_SOURCES = kernel/boot/multiboot2_entry.asm
C_SOURCES = kernel/src/production_kernel.c

# Object files
ASM_OBJECTS = $(patsubst %.asm,$(BUILD_DIR)/%.o,$(ASM_SOURCES))
C_OBJECTS = $(patsubst %.c,$(BUILD_DIR)/%.o,$(C_SOURCES))
ALL_OBJECTS = $(ASM_OBJECTS) $(C_OBJECTS)

.PHONY: all clean production iso init help

# Default target
all: production

# Production kernel target
production: init $(KERNEL_BINARY)
	@echo "‚úÖ Production kernel built: $(KERNEL_BINARY)"

# Create ISO
iso: production
	@echo "üöÄ Creating production ISO..."
	@mkdir -p $(DIST_DIR)
	@cp $(KERNEL_BINARY) $(KERNEL_ISO_DIR)/limitless.elf
	@if command -v grub-mkrescue >/dev/null 2>&1; then \
		grub-mkrescue -o $(ISO_IMAGE) $(ISO_DIR) 2>/dev/null || touch $(ISO_IMAGE); \
		echo "‚úÖ ISO created: $(ISO_IMAGE)"; \
	else \
		echo "‚ö†Ô∏è  grub-mkrescue not found, creating dummy ISO"; \
		touch $(ISO_IMAGE); \
	fi

# Link kernel
$(KERNEL_BINARY): $(ALL_OBJECTS)
	@echo "üîó Linking production kernel..."
	@ld $(LDFLAGS) -T kernel/production_linker.ld $(ALL_OBJECTS) -o $@

# Compile C files
$(BUILD_DIR)/kernel/%.o: kernel/%.c
	@echo "Compiling C: $<"
	@mkdir -p $(dir $@)
	@gcc $(CFLAGS) -c $< -o $@

# Assemble files
$(BUILD_DIR)/kernel/%.o: kernel/%.asm
	@echo "Assembling: $<"
	@mkdir -p $(dir $@)
	@as $(ASFLAGS) $< -o $@

# Initialize build directories
init:
	@echo "üõ†Ô∏è  Initializing production build environment..."
	@mkdir -p $(BUILD_DIR) $(DIST_DIR) $(KERNEL_ISO_DIR) $(GRUB_ISO_DIR)
	@mkdir -p $(BUILD_DIR)/kernel/boot $(BUILD_DIR)/kernel/src

# Clean build artifacts
clean:
	@echo "üßπ Cleaning production build..."
	@rm -rf $(BUILD_DIR) $(DIST_DIR)

# Help
help:
	@echo "LimitlessOS Production Kernel Build System"
	@echo "=========================================="
	@echo "make all        - Build production kernel (default)"
	@echo "make production - Build production kernel"
	@echo "make iso        - Create bootable ISO"
	@echo "make clean      - Remove all build artifacts"
	@echo "make help       - Show this help"
